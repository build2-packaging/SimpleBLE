import impl_libs = fmt%lib{fmt}
intf_libs =

# Public headers.
pub = [dir_path] ../include/

include $pub

pub_hdrs = $($pub/ pub_hdrs)

is_windows = ($cxx.target.class == 'windows')
is_macos = ($cxx.target.class == 'macos')
is_linux = ($cxx.target.class == 'linux')

if $is_linux
{
    import intf_libs += libsimplebluez%lib{simplebluez}
}

lib{simpleble}: $pub/{$pub_hdrs}
lib{simpleble}: {hxx cxx}{*}
lib{simpleble}: builders/{hxx cxx}{*}
lib{simpleble}: external/hxx{*.hpp}

lib{simpleble}: linux/{hxx cxx}{*}: include = $is_linux
lib{simpleble}: windows/{hxx cxx}{*}: include = $is_windows
lib{simpleble}: macos/{hxx cxx mm}{*}: include = $is_macos

lib{simpleble}: $impl_libs $intf_libs

src_inc_dirs = builders/ external/
switch $cxx.target.class
{
    case 'windows'
    {
        src_inc_dirs += windows/
    }
    case 'linux'
    {
        src_inc_dirs += linux/
    }
    case 'macos'
    {
        src_inc_dirs += macos/
        cxx.libs += -framework Foundation -framework CoreBluetooth
    }
    default
    {
        fail "Unsupported platform '$cxx.target.class'"
    }
}

# Build options.
out_pfx_inc = [dir_path] $out_root/include/
src_pfx_inc = [dir_path] $src_root/include/
out_pfx_src = [dir_path] $out_root/src/
src_pfx_src = [dir_path] $src_root/src/

# add all private include dirs
for d: $src_inc_dirs
{
    cxx.poptions +=  "-I$out_pfx_src/$d" "-I$src_pfx_src/$d"
}

cxx.poptions += "-I$out_pfx_src" "-I$src_pfx_src" \
                "-I$out_pfx_inc" "-I$src_pfx_inc" \
                "-DSIMPLEBLE_EXPORTS"

{hbmia obja}{*}: cxx.poptions += -DSIMPLEBLE_STATIC

# Export options.
lib{simpleble}:
{
  cxx.export.poptions = "-I$out_pfx_inc" "-I$src_pfx_inc"
  cxx.export.libs = $intf_libs
}

liba{simpleble}: cxx.export.poptions += -DSIMPLEBLE_STATIC

# For pre-releases use the complete version to make sure they cannot be used
# in place of another pre-release or the final version. See the version module
# for details on the version.* variable values.
if $version.pre_release
  lib{simpleble}: bin.lib.version = "-$version.project_id"
else
  lib{simpleble}: bin.lib.version = "-$version.major.$version.minor"

# Don't install private headers.
hxx{*}: install = false
